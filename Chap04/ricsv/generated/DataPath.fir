;buildInfoPackage: chisel3, version: 3.3.2, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit DataPath : 
  module InstMem : 
    input clock : Clock
    input reset : Reset
    output io : {flip raddr : UInt<64>, instFull : UInt<32>, instRead1 : UInt<5>, instRead2 : UInt<5>, instWrite : UInt<5>, instAluCtrl : UInt<4>}
    
    cmem mem : UInt<32>[1] @[InstMem.scala 19:16]
    infer mport _T = mem[UInt<1>("h00")], clock @[InstMem.scala 21:21]
    io.instFull <= _T @[InstMem.scala 21:15]
    node _T_1 = bits(io.instFull, 19, 15) @[InstMem.scala 22:30]
    io.instRead1 <= _T_1 @[InstMem.scala 22:16]
    node _T_2 = bits(io.instFull, 24, 20) @[InstMem.scala 23:30]
    io.instRead2 <= _T_2 @[InstMem.scala 23:16]
    node _T_3 = bits(io.instFull, 11, 7) @[InstMem.scala 24:30]
    io.instWrite <= _T_3 @[InstMem.scala 24:16]
    node _T_4 = bits(io.instFull, 30, 30) @[InstMem.scala 25:36]
    node _T_5 = bits(io.instFull, 14, 12) @[InstMem.scala 25:53]
    node _T_6 = cat(_T_4, _T_5) @[Cat.scala 29:58]
    io.instAluCtrl <= _T_6 @[InstMem.scala 25:18]
    
  module RegFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip raddr1 : UInt<5>, flip raddr2 : UInt<5>, flip waddr : UInt<5>, flip wdata : UInt<64>, rdata1 : UInt<64>, rdata2 : UInt<64>, flip we : UInt<1>}
    
    cmem regs : UInt<64>[32] @[RegFile.scala 19:17]
    node _T = orr(io.raddr1) @[RegFile.scala 21:33]
    infer mport _T_1 = regs[io.raddr1], clock @[RegFile.scala 21:41]
    node _T_2 = mux(_T, _T_1, UInt<1>("h00")) @[RegFile.scala 21:19]
    io.rdata1 <= _T_2 @[RegFile.scala 21:13]
    node _T_3 = orr(io.raddr2) @[RegFile.scala 22:33]
    infer mport _T_4 = regs[io.raddr2], clock @[RegFile.scala 22:41]
    node _T_5 = mux(_T_3, _T_4, UInt<1>("h00")) @[RegFile.scala 22:19]
    io.rdata2 <= _T_5 @[RegFile.scala 22:13]
    node _T_6 = orr(io.waddr) @[RegFile.scala 23:29]
    node _T_7 = and(io.we, _T_6) @[RegFile.scala 23:15]
    when _T_7 : @[RegFile.scala 23:33]
      infer mport _T_8 = regs[io.waddr], clock @[RegFile.scala 24:9]
      _T_8 <= io.wdata @[RegFile.scala 24:20]
      skip @[RegFile.scala 23:33]
    
  module ImmGen : 
    input clock : Clock
    input reset : Reset
    output io : {flip inst : UInt<32>, aluCtrl : UInt<4>, Imm : UInt<64>}
    
    node Rimm = asSInt(UInt<1>("h00")) @[ImmGen.scala 31:24]
    node _T = bits(io.inst, 31, 20) @[ImmGen.scala 32:21]
    node Iimm = asSInt(_T) @[ImmGen.scala 32:35]
    node _T_1 = bits(io.inst, 31, 25) @[ImmGen.scala 33:25]
    node _T_2 = bits(io.inst, 11, 7) @[ImmGen.scala 33:42]
    node _T_3 = cat(_T_1, _T_2) @[Cat.scala 29:58]
    node Simm = asSInt(_T_3) @[ImmGen.scala 33:57]
    node _T_4 = bits(io.inst, 31, 31) @[ImmGen.scala 34:26]
    node _T_5 = bits(io.inst, 7, 7) @[ImmGen.scala 34:39]
    node _T_6 = bits(io.inst, 30, 25) @[ImmGen.scala 34:51]
    node _T_7 = bits(io.inst, 11, 8) @[ImmGen.scala 34:68]
    node _T_8 = cat(_T_6, _T_7) @[Cat.scala 29:58]
    node _T_9 = cat(_T_4, _T_5) @[Cat.scala 29:58]
    node _T_10 = cat(_T_9, _T_8) @[Cat.scala 29:58]
    node SBimm = asSInt(_T_10) @[ImmGen.scala 34:83]
    node _T_11 = bits(io.inst, 31, 12) @[ImmGen.scala 35:25]
    node _T_12 = cat(_T_11, UInt<12>("h00")) @[Cat.scala 29:58]
    node Uimm = asSInt(_T_12) @[ImmGen.scala 35:52]
    node _T_13 = bits(io.inst, 31, 31) @[ImmGen.scala 36:26]
    node _T_14 = bits(io.inst, 19, 12) @[ImmGen.scala 36:39]
    node _T_15 = bits(io.inst, 20, 20) @[ImmGen.scala 36:56]
    node _T_16 = bits(io.inst, 30, 25) @[ImmGen.scala 36:69]
    node _T_17 = bits(io.inst, 24, 21) @[ImmGen.scala 36:86]
    node _T_18 = cat(_T_16, _T_17) @[Cat.scala 29:58]
    node _T_19 = cat(_T_18, UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_20 = cat(_T_13, _T_14) @[Cat.scala 29:58]
    node _T_21 = cat(_T_20, _T_15) @[Cat.scala 29:58]
    node _T_22 = cat(_T_21, _T_19) @[Cat.scala 29:58]
    node UJimm = asSInt(_T_22) @[ImmGen.scala 36:112]
    node _T_23 = and(io.inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_24 = eq(UInt<14>("h03003"), _T_23) @[Lookup.scala 31:38]
    node _T_25 = and(io.inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_26 = eq(UInt<14>("h03023"), _T_25) @[Lookup.scala 31:38]
    node _T_27 = and(io.inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_28 = eq(UInt<7>("h063"), _T_27) @[Lookup.scala 31:38]
    node _T_29 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_30 = eq(UInt<6>("h033"), _T_29) @[Lookup.scala 31:38]
    node _T_31 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_32 = eq(UInt<31>("h040000033"), _T_31) @[Lookup.scala 31:38]
    node _T_33 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_34 = eq(UInt<15>("h07033"), _T_33) @[Lookup.scala 31:38]
    node _T_35 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_36 = eq(UInt<15>("h06033"), _T_35) @[Lookup.scala 31:38]
    node _T_37 = mux(_T_36, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_34, UInt<1>("h00"), _T_37) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_32, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_30, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_28, UInt<2>("h03"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_26, UInt<1>("h01"), _T_41) @[Lookup.scala 33:37]
    node instType = mux(_T_24, UInt<1>("h01"), _T_42) @[Lookup.scala 33:37]
    node _T_43 = eq(UInt<1>("h01"), instType) @[Mux.scala 80:60]
    node _T_44 = mux(_T_43, Iimm, Rimm) @[Mux.scala 80:57]
    node _T_45 = eq(UInt<2>("h02"), instType) @[Mux.scala 80:60]
    node _T_46 = mux(_T_45, Simm, _T_44) @[Mux.scala 80:57]
    node _T_47 = eq(UInt<2>("h03"), instType) @[Mux.scala 80:60]
    node _T_48 = mux(_T_47, SBimm, _T_46) @[Mux.scala 80:57]
    node _T_49 = eq(UInt<3>("h04"), instType) @[Mux.scala 80:60]
    node _T_50 = mux(_T_49, Uimm, _T_48) @[Mux.scala 80:57]
    node _T_51 = eq(UInt<3>("h05"), instType) @[Mux.scala 80:60]
    node _T_52 = mux(_T_51, UJimm, _T_50) @[Mux.scala 80:57]
    node _T_53 = asUInt(_T_52) @[ImmGen.scala 52:11]
    io.Imm <= _T_53 @[ImmGen.scala 50:10]
    node _T_54 = bits(io.inst, 30, 30) @[ImmGen.scala 53:28]
    node _T_55 = bits(io.inst, 14, 12) @[ImmGen.scala 53:41]
    node _T_56 = cat(_T_54, _T_55) @[Cat.scala 29:58]
    io.aluCtrl <= _T_56 @[ImmGen.scala 53:14]
    
  module ALUSimple : 
    input clock : Clock
    input reset : Reset
    output io : {flip A : UInt<64>, flip B : UInt<64>, flip aluCtrl : UInt<4>, branchZero : UInt<1>, result : UInt<64>}
    
    node _T = add(io.A, io.B) @[Alu.scala 30:22]
    node _T_1 = tail(_T, 1) @[Alu.scala 30:22]
    node _T_2 = sub(io.A, io.B) @[Alu.scala 31:22]
    node _T_3 = tail(_T_2, 1) @[Alu.scala 31:22]
    node _T_4 = and(io.A, io.B) @[Alu.scala 32:22]
    node _T_5 = or(io.A, io.B) @[Alu.scala 33:21]
    node _T_6 = eq(UInt<4>("h02"), io.aluCtrl) @[Mux.scala 80:60]
    node _T_7 = mux(_T_6, _T_1, io.B) @[Mux.scala 80:57]
    node _T_8 = eq(UInt<4>("h06"), io.aluCtrl) @[Mux.scala 80:60]
    node _T_9 = mux(_T_8, _T_3, _T_7) @[Mux.scala 80:57]
    node _T_10 = eq(UInt<4>("h02"), io.aluCtrl) @[Mux.scala 80:60]
    node _T_11 = mux(_T_10, _T_4, _T_9) @[Mux.scala 80:57]
    node _T_12 = eq(UInt<4>("h01"), io.aluCtrl) @[Mux.scala 80:60]
    node _T_13 = mux(_T_12, _T_5, _T_11) @[Mux.scala 80:57]
    io.result <= _T_13 @[Alu.scala 29:13]
    node _T_14 = eq(io.result, UInt<1>("h00")) @[Alu.scala 35:31]
    io.branchZero <= _T_14 @[Alu.scala 35:17]
    
  module AluCtrl : 
    input clock : Clock
    input reset : Reset
    output io : {flip instAluCtrl : UInt<4>, flip aluOp : UInt<2>, aluCtrl : UInt<4>}
    
    node cat = cat(io.aluOp, io.instAluCtrl) @[Cat.scala 29:58]
    node _T = and(cat, UInt<6>("h030")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<1>("h00"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(cat, UInt<5>("h010")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<5>("h010"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(cat, UInt<6>("h02f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<6>("h020"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(cat, UInt<6>("h02f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<6>("h028"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(cat, UInt<6>("h02f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<6>("h027"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(cat, UInt<6>("h02f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<6>("h026"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = mux(_T_11, UInt<4>("h01"), UInt<4>("h00")) @[Lookup.scala 33:37]
    node _T_13 = mux(_T_9, UInt<4>("h00"), _T_12) @[Lookup.scala 33:37]
    node _T_14 = mux(_T_7, UInt<4>("h06"), _T_13) @[Lookup.scala 33:37]
    node _T_15 = mux(_T_5, UInt<4>("h02"), _T_14) @[Lookup.scala 33:37]
    node _T_16 = mux(_T_3, UInt<4>("h06"), _T_15) @[Lookup.scala 33:37]
    node ans_0 = mux(_T_1, UInt<4>("h02"), _T_16) @[Lookup.scala 33:37]
    io.aluCtrl <= ans_0 @[AluCtrl.scala 29:14]
    
  module singleClkControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip inst : UInt<32>, aluSrc : UInt<1>, mem2Reg : UInt<1>, regWrite : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, branch : UInt<1>, aluOp : UInt<2>}
    
    node _T = and(io.inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<14>("h03003"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<14>("h03023"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.inst, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<7>("h063"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<6>("h033"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<31>("h040000033"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<15>("h07033"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.inst, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<15>("h06033"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = mux(_T_13, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_15 = mux(_T_11, UInt<1>("h00"), _T_14) @[Lookup.scala 33:37]
    node _T_16 = mux(_T_9, UInt<1>("h00"), _T_15) @[Lookup.scala 33:37]
    node _T_17 = mux(_T_7, UInt<1>("h00"), _T_16) @[Lookup.scala 33:37]
    node _T_18 = mux(_T_5, UInt<1>("h00"), _T_17) @[Lookup.scala 33:37]
    node _T_19 = mux(_T_3, UInt<1>("h01"), _T_18) @[Lookup.scala 33:37]
    node signal_0 = mux(_T_1, UInt<1>("h01"), _T_19) @[Lookup.scala 33:37]
    node _T_20 = mux(_T_13, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_21 = mux(_T_11, UInt<1>("h00"), _T_20) @[Lookup.scala 33:37]
    node _T_22 = mux(_T_9, UInt<1>("h00"), _T_21) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_7, UInt<1>("h00"), _T_22) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_5, UInt<1>("h00"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_3, UInt<1>("h00"), _T_24) @[Lookup.scala 33:37]
    node signal_1 = mux(_T_1, UInt<1>("h01"), _T_25) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_13, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_11, UInt<1>("h01"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_9, UInt<1>("h01"), _T_27) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_7, UInt<1>("h01"), _T_28) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_5, UInt<1>("h01"), _T_29) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_3, UInt<1>("h00"), _T_30) @[Lookup.scala 33:37]
    node signal_2 = mux(_T_1, UInt<1>("h01"), _T_31) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_13, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_11, UInt<1>("h00"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_9, UInt<1>("h00"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_7, UInt<1>("h00"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_5, UInt<1>("h00"), _T_35) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_3, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node signal_3 = mux(_T_1, UInt<1>("h01"), _T_37) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_13, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_11, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_9, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_7, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_5, UInt<1>("h00"), _T_41) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_3, UInt<1>("h01"), _T_42) @[Lookup.scala 33:37]
    node signal_4 = mux(_T_1, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_13, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_11, UInt<1>("h00"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_9, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_7, UInt<1>("h00"), _T_46) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_5, UInt<1>("h00"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_3, UInt<1>("h00"), _T_48) @[Lookup.scala 33:37]
    node signal_5 = mux(_T_1, UInt<1>("h00"), _T_49) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_13, UInt<2>("h02"), UInt<2>("h00")) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_11, UInt<2>("h02"), _T_50) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_9, UInt<2>("h02"), _T_51) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_7, UInt<2>("h02"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_5, UInt<2>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_3, UInt<2>("h00"), _T_54) @[Lookup.scala 33:37]
    node signal_6 = mux(_T_1, UInt<2>("h00"), _T_55) @[Lookup.scala 33:37]
    node _T_56 = bits(signal_0, 0, 0) @[Control.scala 84:26]
    io.aluSrc <= _T_56 @[Control.scala 84:13]
    node _T_57 = bits(signal_1, 0, 0) @[Control.scala 85:27]
    io.mem2Reg <= _T_57 @[Control.scala 85:14]
    node _T_58 = bits(signal_2, 0, 0) @[Control.scala 86:28]
    io.regWrite <= _T_58 @[Control.scala 86:15]
    node _T_59 = bits(signal_3, 0, 0) @[Control.scala 87:27]
    io.memRead <= _T_59 @[Control.scala 87:14]
    node _T_60 = bits(signal_4, 0, 0) @[Control.scala 88:28]
    io.memWrite <= _T_60 @[Control.scala 88:15]
    node _T_61 = bits(signal_5, 0, 0) @[Control.scala 89:26]
    io.branch <= _T_61 @[Control.scala 89:13]
    io.aluOp <= signal_6 @[Control.scala 90:12]
    
  module DataPath : 
    input clock : Clock
    input reset : UInt<1>
    output io : {addr : UInt<64>, wdata : UInt<64>, flip rdata : UInt<64>, memRead : UInt<1>, memWrite : UInt<1>}
    
    wire nextPC : UInt<64> @[DataPath.scala 13:20]
    reg PC : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[DataPath.scala 14:19]
    PC <= nextPC @[DataPath.scala 15:6]
    inst instMem of InstMem @[DataPath.scala 16:23]
    instMem.clock <= clock
    instMem.reset <= reset
    inst regFile of RegFile @[DataPath.scala 17:23]
    regFile.clock <= clock
    regFile.reset <= reset
    inst immGen of ImmGen @[DataPath.scala 18:22]
    immGen.clock <= clock
    immGen.reset <= reset
    inst alu of ALUSimple @[DataPath.scala 19:19]
    alu.clock <= clock
    alu.reset <= reset
    inst aluCtrl of AluCtrl @[DataPath.scala 20:23]
    aluCtrl.clock <= clock
    aluCtrl.reset <= reset
    inst ctrl of singleClkControl @[DataPath.scala 21:20]
    ctrl.clock <= clock
    ctrl.reset <= reset
    instMem.io.raddr <= PC @[DataPath.scala 24:20]
    ctrl.io.inst <= instMem.io.instFull @[DataPath.scala 27:16]
    regFile.io.raddr1 <= instMem.io.instRead1 @[DataPath.scala 30:21]
    regFile.io.raddr2 <= instMem.io.instRead2 @[DataPath.scala 31:21]
    regFile.io.waddr <= instMem.io.instWrite @[DataPath.scala 32:20]
    node _T = mux(ctrl.io.mem2Reg, io.rdata, alu.io.result) @[DataPath.scala 33:26]
    regFile.io.wdata <= _T @[DataPath.scala 33:20]
    regFile.io.we <= ctrl.io.regWrite @[DataPath.scala 34:17]
    immGen.io.inst <= instMem.io.instFull @[DataPath.scala 36:18]
    aluCtrl.io.aluOp <= ctrl.io.aluOp @[DataPath.scala 38:20]
    aluCtrl.io.instAluCtrl <= immGen.io.aluCtrl @[DataPath.scala 39:26]
    alu.io.A <= regFile.io.rdata1 @[DataPath.scala 41:12]
    node _T_1 = mux(ctrl.io.aluSrc, immGen.io.Imm, regFile.io.rdata2) @[DataPath.scala 42:18]
    alu.io.B <= _T_1 @[DataPath.scala 42:12]
    alu.io.aluCtrl <= aluCtrl.io.aluCtrl @[DataPath.scala 43:18]
    io.addr <= alu.io.result @[DataPath.scala 45:11]
    io.wdata <= regFile.io.rdata2 @[DataPath.scala 46:12]
    io.memRead <= ctrl.io.memRead @[DataPath.scala 47:14]
    io.memWrite <= ctrl.io.memWrite @[DataPath.scala 48:15]
    wire sum : UInt<64> @[DataPath.scala 50:17]
    node _T_2 = dshl(immGen.io.Imm, UInt<1>("h01")) @[DataPath.scala 51:26]
    node _T_3 = add(_T_2, PC) @[DataPath.scala 51:34]
    node _T_4 = tail(_T_3, 1) @[DataPath.scala 51:34]
    sum <= _T_4 @[DataPath.scala 51:7]
    node _T_5 = and(ctrl.io.branch, alu.io.branchZero) @[DataPath.scala 52:32]
    node _T_6 = add(PC, UInt<3>("h04")) @[DataPath.scala 52:61]
    node _T_7 = tail(_T_6, 1) @[DataPath.scala 52:61]
    node _T_8 = mux(_T_5, sum, _T_7) @[DataPath.scala 52:16]
    nextPC <= _T_8 @[DataPath.scala 52:10]
    
